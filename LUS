You're upgrading your GigaSpaces LUS configuration from 8.x (SystemBoot-based XML setup) to GigaSpaces 16.x, which no longer supports internal APIs like SystemBoot. Instead, scripts and environment variables are used to configure and launch services like the Lookup Service (LUS).
Here’s a modern 16.x equivalent of your configuration in script-based format using environment variables — no need for XML or internal classes:
________________________________________
✅ 16.x Equivalent of Your Configuration
1. Use setenv-overrides.sh to set environment variables
Edit (or create if missing):
$GS_HOME/bin/setenv-overrides.sh
Add the following content:
#!/bin/bash

export EXT_JAVA_OPTIONS="$EXT_JAVA_OPTIONS \
  -Dsun.rmi.dgc.client.gcInterval=36000000 \
  -Dsun.rmi.dgc.server.gcInterval=36000000 \
  -Djava.rmi.server.RMIClassLoaderSpi=default \
  -Djava.rmi.server.logCalls=false \
  -Dcom.gs.jini_lus.groups=PS_ARCH_${ENV_TYPE} \
  -Dcom.gs.jini_lus.locators=${GIGASPACE_LUS_HOST_PORT} \
  -Dcom.gs.logging.debug=false \
  -Dcom.gigaspaces.lib=${ARCH_LIB_DIR}/ \
  -Dcom.gigaspaces.jini.lib=${ARCH_LIB_DIR}/jini/"
✅ This replaces your <EnvVar key="JVM_ARGS" ...> block.
________________________________________
2. Start LUS with CLI (instead of SystemBoot)
Use the standard GigaSpaces startup script:
$GS_HOME/bin/gs.sh lus
✅ This replaces:
<EnvVar key="PROGRAM_ARGS" value="${MAIN_CLASS} com.gigaspaces.start.services=LH"/>
In 16.x, you simply pass "lus" as an argument to gs.sh — no need for SystemBoot.
________________________________________
 Optional: Custom JARs or Classpath Handling
If you're using external libs (ARCH_LIB_DIR), make sure they’re in the right folder (e.g., $GS_HOME/lib/platform/ext or added via GS_EXT).
________________________________________
✅ Summary Mapping
GigaSpaces 8.x (XML + SystemBoot)	GigaSpaces 16.x (Script-Based CLI)
MAIN_CLASS = com.gigaspaces.start.SystemBoot	Use gs.sh lus
PROGRAM_ARGS = com.gigaspaces.start.services=LH	Replaced by lus argument in gs.sh
JVM_ARGS for system properties	Use setenv-overrides.sh
Custom libs in ${ARCH_LIB_DIR}/jini/	Set via GS_EXT or in classpath
________________________________________
If you're using a process monitor (like your <ProcessEnvironment> XML implies), integrate this CLI-based gs.sh lus startup inside that system’s launcher instead of relying on internal APIs.
